# -*- coding: utf-8 -*-
"""Label Identites

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kn3zfMCJz2_6LRSXuCWbxkEdSdG0VYE-

# Label Identities - Deep Neural Network

by Joshua Armah
"""

import tensorflow as tf
from tensorflow import keras
import numpy as np
import matplotlib.pyplot as plt

"""## Datasets"""

fashion_mnist = keras.datasets.fashion_mnist

(training_set, training_labels), (validation_set, test_labels) = fashion_mnist.load_data()

category_names = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
               'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle boot']

"""Dataset
70,000 Grayscale Images in 10 Categories
28px by 28px Resolution

<table>
  <tr><td>
    <img src="https://tensorflow.org/images/fashion-mnist-sprite.png"
         alt="Fashion MNIST sprite"  width="600">
  </td></tr>
  <tr><td align="center">
    <b>Figure 1.</b> Fashion-MNIST samples (by Zalando, MIT License).<br/>&nbsp;
  </td></tr>
</table>


Training Set = 60,000 Images

Validation Set = 10,000 Images

Category Labels
<table>
  <tr>
    <th>Label</th>
    <th>Class</th>
  </tr>
  <tr>
    <td>0</td>
    <td>T-shirt/top</td>
  </tr>
  <tr>
    <td>1</td>
    <td>Trouser</td>
  </tr>
    <tr>
    <td>2</td>
    <td>Pullover</td>
  </tr>
    <tr>
    <td>3</td>
    <td>Dress</td>
  </tr>
    <tr>
    <td>4</td>
    <td>Coat</td>
  </tr>
    <tr>
    <td>5</td>
    <td>Sandal</td>
  </tr>
    <tr>
    <td>6</td>
    <td>Shirt</td>
  </tr>
    <tr>
    <td>7</td>
    <td>Sneaker</td>
  </tr>
    <tr>
    <td>8</td>
    <td>Bag</td>
  </tr>
    <tr>
    <td>9</td>
    <td>Ankle boot</td>
  </tr>
</table>

## Exploratory Analysis 

Explore the dataset
"""

training_set.shape
len(training_labels)
training_labels
validation_set.shape
len(test_labels)

"""Preprocessing the data"""

plt.figure()
plt.imshow(training_set[0])
plt.colorbar()
plt.grid(False)
plt.show()

#Visualize the training set 
training_set = training_set / 255.0

validation_set = validation_set / 255.0
plt.figure(figsize=(10,10))
for i in range(25):
    plt.subplot(5,5,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.grid(False)
    plt.imshow(training_set[i], cmap=plt.cm.binary)
    plt.xlabel(class_names[training_labels[i]])
plt.show()

"""## Create the Model

Setup nerual network
"""

model = keras.Sequential([
    keras.layers.Flatten(input_shape=(28, 28)),
    keras.layers.Dense(128, activation=tf.nn.relu),
    keras.layers.Dense(10, activation=tf.nn.softmax)
])

model.compile(optimizer='adam', 
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

"""## Train the model

Train the nerual network
"""

model.fit(training_set, training_labels, epochs=15)

"""## Evaluate model"""

test_loss, test_acc = model.evaluate(validation_set, test_labels)

print('Test accuracy:', test_acc)

